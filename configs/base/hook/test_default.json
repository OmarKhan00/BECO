{
    "hooks":{
        "hooks": [
            {
                "type": "CheckpointLoadHook",
                "settings": {
                    "path": "$CKPT_PATH",
                    "net_only": true
                }
            },{
                "type": "TqdmLoggerHook",
                "settings": {
                    "by_epoch": false,
                    "bar_total_color": "#7adecc",
                    "bar_iter_color": "#61c2fa",
                    "bar_val_ctrl_seq": "93",
                    "bar_train_ctrl_seq": "96"
                }
            },{
                "type": "TBLoggerHook",
                "settings": {
                    "path": "$LOGGING_PATH"
                }
            },{
                "type": "MetricHook",
                "settings": {
                    "interval": 50,
                    "metric_keys": ["Overall_Acc", "mClass_Acc", "mPred_Acc", "mIoU"]
                }
            },{
                "type": "CustomMetricHook",
                "settings":{
                    "metric_keys": ["Class_Acc", "Pred_Acc", "IoU"],
                    "buffer_key": "cls_metric"
                }
            },{
                "type": "VISUAL.PlotHook"
            },{
                "type": "VISUAL.VisualTBLoggerHook",
                "settings":{
                    "path": "$LOGGING_PATH"
                }
            }
        ],

        "stages": {
            "before_run": [],
            "after_run": [],

            "before_train": [],
            "after_train": [],
            "before_train_epoch": [],
            "after_train_epoch": [],
            "before_train_iter": [],
            "after_train_iter": [],

            "before_val": [],
            "after_val": [],
            "before_val_iter": [],
            "after_val_iter": [],

            "before_test": [
                "CheckpointLoadHook.load_ckpt",
                "TqdmLoggerHook.init_bar_iter_test",
                "VisualTBLoggerHook.get_writer"
            ],
            "after_test": [
                "CustomMetricHook.get_metric",
                "MetricHook.get_test_metric",
                "TqdmLoggerHook.log_test",
                "TBLoggerHook.log_test",
                "PlotHook.log_per_cls_stat"
            ],
            "before_test_iter": [],
            "after_test_iter": [
                "TqdmLoggerHook.update_bar_iter"
            ]
        }
    }
}